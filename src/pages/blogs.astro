---
import Layout from '../layouts/Layout.astro';

interface Post {
  title: string;
  date: string;
  description: string;
  readingTime: string;
  content: string;
}

const posts: Post[] = [
  {
    title: "Designing with Minimalism in Mind",
    date: "August 5, 2025",
    description: "A deep dive into why less is often more in product design, and how to achieve true visual harmony.",
    readingTime: "5 min read",
    content: "Minimalism in design isn't just about removing elements—it's about intentional curation. Every line, color, and space serves a purpose. When we strip away the unnecessary, we create room for what truly matters to breathe and communicate effectively. The challenge lies not in what to remove, but in knowing what essential elements to preserve.",
  },
  {
    title: "The Subtle Art of Writing Clean Code",
    date: "July 22, 2025",
    description: "Best practices and small habits that lead to cleaner, more maintainable software over time.",
    readingTime: "8 min read",
    content: "Clean code is not about perfection—it's about clarity. Small, consistent practices like meaningful variable names, short functions, and clear comments compound over time. The goal isn't to impress other developers with clever solutions, but to write code that your future self will thank you for.",
  },
  {
    title: "Why Performance is a Feature",
    date: "July 10, 2025",
    description: "Exploring how speed and responsiveness influence user experience far more than we think.",
    readingTime: "6 min read",
    content: "Users don't just notice fast applications—they feel them. Every millisecond of delay creates friction in the user's mental model. Performance isn't a technical concern relegated to the backend; it's a user experience feature that affects engagement, conversion, and user satisfaction in measurable ways.",
  },
];
---

<Layout title="Blog">
  <section class="max-w-4xl mx-auto px-4 py-12">
    <!-- Header -->
    <header class="text-center mb-12">
      <h1 class="text-4xl font-bold mb-4 text-gray-900">Blog</h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Thoughts on technology, machine learning, and building better software systems.
      </p>
    </header>

    <div class="space-y-12">
      {posts.map((post, index) => (
        <article class="group bg-white border border-gray-200 rounded-lg p-8 transition-all duration-300 hover:shadow-lg hover:border-gray-300">
          <header class="mb-4">
            <time class="text-sm text-blue-600 font-medium">{post.date} • {post.readingTime}</time>
            <h2 class="mt-2 text-2xl font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
              {post.title}
            </h2>
          </header>
          <p class="text-gray-600 mb-4 leading-relaxed">{post.description}</p>
          
          <!-- Expandable content div -->
          <div id={`content-${index}`} class="hidden mt-6 p-6 bg-blue-50 rounded-lg border-l-4 border-blue-500">
            <p class="text-gray-800 leading-relaxed">{post.content}</p>
          </div>
          
          <button 
            onclick={`toggleContent(${index})`}
            id={`btn-${index}`}
            class="inline-flex items-center gap-2 mt-4 px-4 py-2 text-sm font-medium text-blue-600 bg-blue-50 rounded-lg hover:bg-blue-100 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50"
          >
            <span>Read more</span>
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </button>
        </article>
      ))}
    </div>
  </section>
</Layout>

<script>
  function toggleContent(index: number): void {
    const contentDiv = document.getElementById(`content-${index}`);
    const button = document.getElementById(`btn-${index}`);
    
    if (contentDiv && contentDiv.classList.contains('hidden')) {
      contentDiv.classList.remove('hidden');
      contentDiv.classList.add('animate-fade-in');
      if (button) {
        button.innerHTML = `
          <span>Read less</span>
          <svg class="w-4 h-4 rotate-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        `;
      }
    } else if (contentDiv) {
      contentDiv.classList.add('hidden');
      contentDiv.classList.remove('animate-fade-in');
      if (button) {
        button.innerHTML = `
          <span>Read more</span>
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        `;
      }
    }
  }

  // Make the function globally available
  (window as any).toggleContent = toggleContent;
</script>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fade-in {
    animation: fade-in 0.3s ease-out;
  }
</style>